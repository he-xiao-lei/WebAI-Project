<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cloud.hexiaolei.webaiproject.Mapper.EmpMapper">
    <update id="updateById">
        update emp
        <set>
            <!-- 使用MyBatis的<set>标签可以动态生成更新语句中的字段赋值部分 -->
            <!-- 与普通set的区别在于：当没有任何条件满足时，不会产生多余的逗号或语法错误 -->
            <!-- 每个<if>标签内的条件字段只有在传入参数不为空时才会加入到最终的SQL语句中 -->
            <!-- 同时会自动去除最后匹配项末尾的逗号，避免SQL语法错误 -->
            <!-- 如果这里不使用动态sql，那么如果只修改员工姓名，那么其他属性都是null值，会导致错误 -->
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="job != null and job != ''">job = #{job},</if>
            <if test="salary != null">salary = #{salary},</if>
            <if test="image != null and image != ''">image = #{image},</if>
            <if test="entryDate != null">entry_date = #{entryDate},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </set>
        where id = #{id}
    </update>
    <delete id="deleteUserById">
        delete from emp where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <!--    原始方式-->
    <!--    <select id="queryPages" resultType="cloud.hexiaolei.webaiproject.pojo.Emp">-->
    <!--        select e.*,d.name deptName from emp e left join dept d on e.dept_id = d.id order by e.update_time limit #{start},#{pageSize};-->
    <!--    </select>-->
    <select id="queryPages" resultType="cloud.hexiaolei.webaiproject.pojo.Emp">

        select e.*,d.name deptName from emp e left join dept d on e.dept_id = d.id
        # 动态sql配置,where标签用来设置and条件是否添加到最后的sql里面,if也是判断如果有这个参数就添加到最后的sql里面
        <where>
            <if test="name != null and name != ''">
                e.name like concat('%',#{name},'%')
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="begin != null and end != null">
                and entry_date between #{begin} and #{end}
            </if>
        </where>
        order by e.update_time desc
    </select>
    <!--    根据Id查询员工基本信息和工作经历信息-->
    <select id="getInfo" resultMap="empResultMap">
        select e.*,
               ee.id      ee_id,
               ee.emp_id  ee_empid,
               ee.begin   ee_begin,
               ee.end     ee_end,
               ee.company ee_company,
               ee.job     ee_job
        from emp e
                 left join tlias.emp_expr ee on e.id = ee.emp_id
        where e.id = #{id};
    </select>


    <select id="selectAllEmp" resultType="cloud.hexiaolei.webaiproject.pojo.Emp">
        select e.*
        from emp e
        left join dept d on e.dept_id = d.id
    </select>

    <!--    自定义结果集 ofType集合里每个参数的类型-->
    <resultMap id="empResultMap" type="cloud.hexiaolei.webaiproject.pojo.Emp">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="phone" property="phone"/>
        <result column="job" property="job"/>
        <result column="salary" property="salary"/>
        <result column="image" property="image"/>
        <result column="entry_date" property="entryDate"/>
        <result column="dept_id" property="deptId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <!--        封装exprList-->
        <collection property="exprList" ofType="cloud.hexiaolei.webaiproject.pojo.EmpExpr">
            <id column="ee_id" property="id"/>
            <result column="ee_company" property="company"/>
            <result column="ee_job" property="job"/>
            <result column="ee_begin" property="begin"/>
            <result column="ee_end" property="end"/>
            <result column="ee_empid" property="empId"/>
        </collection>
    </resultMap>
    <!--    //主键返回-->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        insert into emp(username, name, gender, phone, job, salary, image, entry_date, dept_id, create_time,
                        update_time)
        values (#{username}, #{name}, #{gender}, #{phone}, #{job}, #{salary}, #{image}, #{entryDate}, #{deptId},
                #{createTime}, #{updateTime})
    </insert>

</mapper>